{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.14","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceType":"datasetVersion","sourceId":9838723,"datasetId":6035419,"databundleVersionId":10088185}],"dockerImageVersionId":30786,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"import kagglehub\n\n# Download latest version\npath = kagglehub.dataset_download(\"mungjae/seoul-data-set\")\n\nprint(\"Path to dataset files:\", path)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-11T05:03:00.244901Z","iopub.execute_input":"2024-11-11T05:03:00.245691Z","iopub.status.idle":"2024-11-11T05:03:12.649425Z","shell.execute_reply.started":"2024-11-11T05:03:00.245630Z","shell.execute_reply":"2024-11-11T05:03:12.648296Z"}},"outputs":[{"name":"stdout","text":"Path to dataset files: /kaggle/input/seoul-data-set\n","output_type":"stream"}],"execution_count":1},{"cell_type":"code","source":"# 필요한 라이브러리 임포트\nimport pandas as pd\nimport numpy as np\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import mean_squared_error\n\n# 1. 데이터 불러오기\n\n# 예: 집값 데이터셋 파일을 CSV로 불러오기\n# data = pd.read_csv('house_prices.csv')\n\n# 예제 데이터 생성\ndata = pd.read_csv('/kaggle/input/seoul-data-set/.csv', encoding='cp949', low_memory=False)\nprint(len(data))","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-11T05:04:00.644488Z","iopub.execute_input":"2024-11-11T05:04:00.644915Z","iopub.status.idle":"2024-11-11T05:04:11.736610Z","shell.execute_reply.started":"2024-11-11T05:04:00.644857Z","shell.execute_reply":"2024-11-11T05:04:11.735298Z"}},"outputs":[{"name":"stdout","text":"1026032\n","output_type":"stream"}],"execution_count":2},{"cell_type":"code","source":"# 2. 특성과 타깃 변수 분리\ncols1 = [\"접수연도\",\"자치구명\",\"계약일\",\"건물면적(㎡)\",\"토지면적(㎡)\",\"층\",\"건축년도\",\"건물용도\"]\nX = data[cols1]\ncols2 = ['물건금액(만원)']\ny = data[cols2]","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-11T05:21:07.915646Z","iopub.execute_input":"2024-11-11T05:21:07.916136Z","iopub.status.idle":"2024-11-11T05:21:08.021021Z","shell.execute_reply.started":"2024-11-11T05:21:07.916088Z","shell.execute_reply":"2024-11-11T05:21:08.019842Z"}},"outputs":[],"execution_count":23},{"cell_type":"code","source":"# NaN 값을 가진 행의 인덱스 식별\nnan_indices = X[X.isna().any(axis=1)].index\n\n# X에서 NaN 값을 가진 행 제거\nX_cleaned = X.dropna()\n\n# y에서 동일한 인덱스의 행 제거\ny_cleaned = y.drop(nan_indices)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-11T05:21:08.709812Z","iopub.execute_input":"2024-11-11T05:21:08.710247Z","iopub.status.idle":"2024-11-11T05:21:09.493014Z","shell.execute_reply.started":"2024-11-11T05:21:08.710209Z","shell.execute_reply":"2024-11-11T05:21:09.491529Z"}},"outputs":[],"execution_count":24},{"cell_type":"code","source":"print(len(X_cleaned))","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-11T05:21:09.495047Z","iopub.execute_input":"2024-11-11T05:21:09.495444Z","iopub.status.idle":"2024-11-11T05:21:09.501527Z","shell.execute_reply.started":"2024-11-11T05:21:09.495404Z","shell.execute_reply":"2024-11-11T05:21:09.500361Z"}},"outputs":[{"name":"stdout","text":"769936\n","output_type":"stream"}],"execution_count":25},{"cell_type":"code","source":"y_cleaned","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-11T05:21:10.399259Z","iopub.execute_input":"2024-11-11T05:21:10.399729Z","iopub.status.idle":"2024-11-11T05:21:10.412938Z","shell.execute_reply.started":"2024-11-11T05:21:10.399678Z","shell.execute_reply":"2024-11-11T05:21:10.411623Z"}},"outputs":[{"execution_count":26,"output_type":"execute_result","data":{"text/plain":"         물건금액(만원)\n0           33500\n3           11000\n4           27250\n5           27050\n6           25650\n...           ...\n1026025     56730\n1026027     46500\n1026028     46500\n1026030     18000\n1026031     71000\n\n[769936 rows x 1 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>물건금액(만원)</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>33500</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>11000</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>27250</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>27050</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>25650</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>1026025</th>\n      <td>56730</td>\n    </tr>\n    <tr>\n      <th>1026027</th>\n      <td>46500</td>\n    </tr>\n    <tr>\n      <th>1026028</th>\n      <td>46500</td>\n    </tr>\n    <tr>\n      <th>1026030</th>\n      <td>18000</td>\n    </tr>\n    <tr>\n      <th>1026031</th>\n      <td>71000</td>\n    </tr>\n  </tbody>\n</table>\n<p>769936 rows × 1 columns</p>\n</div>"},"metadata":{}}],"execution_count":26},{"cell_type":"code","source":"# 3. 학습/테스트 데이터 분리\nX_train, X_test, y_train, y_test = train_test_split(X_cleaned, y_cleaned, test_size=0.2, random_state=42)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-11T05:21:11.259475Z","iopub.execute_input":"2024-11-11T05:21:11.259954Z","iopub.status.idle":"2024-11-11T05:21:11.555776Z","shell.execute_reply.started":"2024-11-11T05:21:11.259901Z","shell.execute_reply":"2024-11-11T05:21:11.554171Z"}},"outputs":[],"execution_count":27},{"cell_type":"code","source":"import pandas  as pd\nimport numpy   as np\nimport xgboost as xgb","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-11T05:21:36.715329Z","iopub.execute_input":"2024-11-11T05:21:36.716478Z","iopub.status.idle":"2024-11-11T05:21:36.721733Z","shell.execute_reply.started":"2024-11-11T05:21:36.716426Z","shell.execute_reply":"2024-11-11T05:21:36.720483Z"}},"outputs":[],"execution_count":29},{"cell_type":"code","source":"X_train['접수연도'] = X_train['접수연도'].astype('category')\nX_train['건축년도'] = X_train['건축년도'].astype('category')\nX_train['건물용도'] = X_train['건물용도'].astype('category')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-11T05:21:37.149332Z","iopub.execute_input":"2024-11-11T05:21:37.149795Z","iopub.status.idle":"2024-11-11T05:21:37.316549Z","shell.execute_reply.started":"2024-11-11T05:21:37.149752Z","shell.execute_reply":"2024-11-11T05:21:37.315104Z"}},"outputs":[],"execution_count":30},{"cell_type":"code","source":"from sklearn.preprocessing import LabelEncoder\n\n# 필요한 열을 인코딩\nX_train['접수연도'] = X_train['접수연도'].astype('category')\nX_train['건축년도'] = X_train['건축년도'].astype('category')\nX_train['건물용도'] = X_train['건물용도'].astype('category')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-11T05:21:37.509446Z","iopub.execute_input":"2024-11-11T05:21:37.509905Z","iopub.status.idle":"2024-11-11T05:21:37.519792Z","shell.execute_reply.started":"2024-11-11T05:21:37.509844Z","shell.execute_reply":"2024-11-11T05:21:37.518483Z"}},"outputs":[],"execution_count":31},{"cell_type":"code","source":"print(X_train.dtypes)  # object 타입 열을 모두 확인하기","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-11T05:21:38.239589Z","iopub.execute_input":"2024-11-11T05:21:38.240087Z","iopub.status.idle":"2024-11-11T05:21:38.247774Z","shell.execute_reply.started":"2024-11-11T05:21:38.240040Z","shell.execute_reply":"2024-11-11T05:21:38.246574Z"}},"outputs":[{"name":"stdout","text":"접수연도       category\n자치구명         object\n계약일           int64\n건물면적(㎡)     float64\n토지면적(㎡)     float64\n층           float64\n건축년도       category\n건물용도       category\ndtype: object\n","output_type":"stream"}],"execution_count":32},{"cell_type":"code","source":"print(X_train.columns)\nprint(X_test.columns)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-11T05:21:38.979054Z","iopub.execute_input":"2024-11-11T05:21:38.979526Z","iopub.status.idle":"2024-11-11T05:21:38.986219Z","shell.execute_reply.started":"2024-11-11T05:21:38.979482Z","shell.execute_reply":"2024-11-11T05:21:38.984862Z"}},"outputs":[{"name":"stdout","text":"Index(['접수연도', '자치구명', '계약일', '건물면적(㎡)', '토지면적(㎡)', '층', '건축년도', '건물용도'], dtype='object')\nIndex(['접수연도', '자치구명', '계약일', '건물면적(㎡)', '토지면적(㎡)', '층', '건축년도', '건물용도'], dtype='object')\n","output_type":"stream"}],"execution_count":33},{"cell_type":"code","source":"import pandas as pd\n\n\n# 범주형 열 '자치구명'을 원-핫 인코딩\nX_train = pd.get_dummies(X_train, columns=['자치구명'])\nX_test = pd.get_dummies(X_test, columns=['자치구명'])","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-11T05:21:39.894390Z","iopub.execute_input":"2024-11-11T05:21:39.895358Z","iopub.status.idle":"2024-11-11T05:21:40.070445Z","shell.execute_reply.started":"2024-11-11T05:21:39.895304Z","shell.execute_reply":"2024-11-11T05:21:40.069144Z"}},"outputs":[],"execution_count":34},{"cell_type":"code","source":"# 데이터프레임에서 범주형 열을 원-핫 인코딩\nX_train = pd.get_dummies(X_train)\nX_test = pd.get_dummies(X_test)\n\n# 인코딩 후 모든 열이 수치형인지 확인\nprint(X_train.dtypes)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-11T05:21:40.769382Z","iopub.execute_input":"2024-11-11T05:21:40.769826Z","iopub.status.idle":"2024-11-11T05:21:40.922556Z","shell.execute_reply.started":"2024-11-11T05:21:40.769787Z","shell.execute_reply":"2024-11-11T05:21:40.921159Z"}},"outputs":[{"name":"stdout","text":"계약일              int64\n건물면적(㎡)        float64\n토지면적(㎡)        float64\n층              float64\n자치구명_강남구          bool\n                ...   \n건축년도_2023.0       bool\n건축년도_2024.0       bool\n건물용도_아파트          bool\n건물용도_연립다세대        bool\n건물용도_오피스텔         bool\nLength: 109, dtype: object\n","output_type":"stream"}],"execution_count":35},{"cell_type":"code","source":"from sklearn.model_selection import GridSearchCV\nimport numpy as np\n\n# set up our search grid with narrowed hyperparameters\nparam_grid = {\n    \"max_depth\": [4, 5],  # 좁힌 max_depth\n    \"n_estimators\": [500, 600],  # 좁힌 n_estimators\n    \"learning_rate\": [0.01]  # 학습률을 0.01로 고정\n}\n\n# y_train을 1D 배열로 변환\ny_train = y_train.ravel()  # numpy 배열이라면 .values 필요 없음\n\n# GridSearchCV 사용, 병렬 처리 및 교차 검증 폴드 수 줄이기\nsearch = GridSearchCV(regressor, param_grid, cv=3, n_jobs=-1)\nsearch.fit(X_train, y_train)\n\n# 출력: 최적 하이퍼파라미터\nprint(\"The best hyperparameters are \", search.best_params_)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-11T05:56:02.085084Z","iopub.execute_input":"2024-11-11T05:56:02.085897Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null}]}