{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.14","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":9866398,"sourceType":"datasetVersion","datasetId":6056079}],"dockerImageVersionId":30786,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# 필요한 라이브러리 임포트\nimport pandas as pd\nimport numpy as np\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import mean_squared_error\n\n# 1. 데이터 불러오기\n\n# 예: 집값 데이터셋 파일을 CSV로 불러오기\n# data = pd.read_csv('house_prices.csv')\n\n# 예제 데이터 생성\ndata = pd.read_csv('/kaggle/input/seoul-department-data-final/.csv', encoding='cp949', low_memory=False)\nprint(len(data))","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-11T05:01:14.739294Z","iopub.execute_input":"2024-11-11T05:01:14.739695Z","iopub.status.idle":"2024-11-11T05:01:20.114360Z","shell.execute_reply.started":"2024-11-11T05:01:14.739660Z","shell.execute_reply":"2024-11-11T05:01:20.112705Z"}},"outputs":[{"name":"stdout","text":"1026032\n","output_type":"stream"}],"execution_count":44},{"cell_type":"code","source":"# 2. 특성과 타깃 변수 분리\ncols1 = [\"접수연도\",\"자치구명\",\"법정동명\",\"계약일\",\"건물면적(㎡)\",\"토지면적(㎡)\",\"층\",\"건축년도\",\"건물용도\",\"신고구분\"]\nX = data[cols1]\ncols2 = ['물건금액(만원)']\ny = data[cols2]","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"X","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# NaN 값을 가진 행의 인덱스 식별\nnan_indices = X[X.isna().any(axis=1)].index\n\n# X에서 NaN 값을 가진 행 제거\nX_cleaned = X.dropna()\n\n# y에서 동일한 인덱스의 행 제거\ny_cleaned = y.drop(nan_indices)","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"print(len(X_cleaned))","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"y_cleaned","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-11T00:23:07.237516Z","iopub.execute_input":"2024-11-11T00:23:07.237985Z","iopub.status.idle":"2024-11-11T00:23:07.249907Z","shell.execute_reply.started":"2024-11-11T00:23:07.237941Z","shell.execute_reply":"2024-11-11T00:23:07.248633Z"}},"outputs":[{"execution_count":23,"output_type":"execute_result","data":{"text/plain":"        물건금액(만원)\n0          33500\n3          11000\n4          27250\n5          27050\n6          25650\n...          ...\n230731     47300\n230732     12000\n230733     29750\n230734     27500\n230735     14200\n\n[212942 rows x 1 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>물건금액(만원)</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>33500</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>11000</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>27250</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>27050</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>25650</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>230731</th>\n      <td>47300</td>\n    </tr>\n    <tr>\n      <th>230732</th>\n      <td>12000</td>\n    </tr>\n    <tr>\n      <th>230733</th>\n      <td>29750</td>\n    </tr>\n    <tr>\n      <th>230734</th>\n      <td>27500</td>\n    </tr>\n    <tr>\n      <th>230735</th>\n      <td>14200</td>\n    </tr>\n  </tbody>\n</table>\n<p>212942 rows × 1 columns</p>\n</div>"},"metadata":{}}],"execution_count":23},{"cell_type":"code","source":"# 3. 학습/테스트 데이터 분리\nX_train, X_test, y_train, y_test = train_test_split(X_cleaned, y_cleaned, test_size=0.2, random_state=42)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-11T00:23:20.947385Z","iopub.execute_input":"2024-11-11T00:23:20.947772Z","iopub.status.idle":"2024-11-11T00:23:21.048553Z","shell.execute_reply.started":"2024-11-11T00:23:20.947738Z","shell.execute_reply":"2024-11-11T00:23:21.047300Z"}},"outputs":[],"execution_count":24},{"cell_type":"code","source":"X_train.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-11T00:23:25.402994Z","iopub.execute_input":"2024-11-11T00:23:25.403425Z","iopub.status.idle":"2024-11-11T00:23:25.422641Z","shell.execute_reply.started":"2024-11-11T00:23:25.403380Z","shell.execute_reply":"2024-11-11T00:23:25.421080Z"}},"outputs":[{"execution_count":25,"output_type":"execute_result","data":{"text/plain":"        접수연도  자치구명 법정동명       계약일  건물면적(㎡)  토지면적(㎡)     층    건축년도   건물용도  신고구분\n103328  2024   관악구  봉천동  20240702    59.58    0.000  15.0  2004.0    아파트  중개거래\n109641  2024  동대문구  신설동  20240616    17.12   26.983  19.0  2020.0   오피스텔  중개거래\n79714   2024   성북구  정릉동  20240905    53.98   31.000   2.0  1995.0  연립다세대  중개거래\n54090   2023   광진구  자양동  20230331    26.38   16.280   5.0  2003.0  연립다세대  중개거래\n204198  2022   성북구  정릉동  20220304    59.11   38.070   4.0  1996.0  연립다세대  중개거래","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>접수연도</th>\n      <th>자치구명</th>\n      <th>법정동명</th>\n      <th>계약일</th>\n      <th>건물면적(㎡)</th>\n      <th>토지면적(㎡)</th>\n      <th>층</th>\n      <th>건축년도</th>\n      <th>건물용도</th>\n      <th>신고구분</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>103328</th>\n      <td>2024</td>\n      <td>관악구</td>\n      <td>봉천동</td>\n      <td>20240702</td>\n      <td>59.58</td>\n      <td>0.000</td>\n      <td>15.0</td>\n      <td>2004.0</td>\n      <td>아파트</td>\n      <td>중개거래</td>\n    </tr>\n    <tr>\n      <th>109641</th>\n      <td>2024</td>\n      <td>동대문구</td>\n      <td>신설동</td>\n      <td>20240616</td>\n      <td>17.12</td>\n      <td>26.983</td>\n      <td>19.0</td>\n      <td>2020.0</td>\n      <td>오피스텔</td>\n      <td>중개거래</td>\n    </tr>\n    <tr>\n      <th>79714</th>\n      <td>2024</td>\n      <td>성북구</td>\n      <td>정릉동</td>\n      <td>20240905</td>\n      <td>53.98</td>\n      <td>31.000</td>\n      <td>2.0</td>\n      <td>1995.0</td>\n      <td>연립다세대</td>\n      <td>중개거래</td>\n    </tr>\n    <tr>\n      <th>54090</th>\n      <td>2023</td>\n      <td>광진구</td>\n      <td>자양동</td>\n      <td>20230331</td>\n      <td>26.38</td>\n      <td>16.280</td>\n      <td>5.0</td>\n      <td>2003.0</td>\n      <td>연립다세대</td>\n      <td>중개거래</td>\n    </tr>\n    <tr>\n      <th>204198</th>\n      <td>2022</td>\n      <td>성북구</td>\n      <td>정릉동</td>\n      <td>20220304</td>\n      <td>59.11</td>\n      <td>38.070</td>\n      <td>4.0</td>\n      <td>1996.0</td>\n      <td>연립다세대</td>\n      <td>중개거래</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":25},{"cell_type":"code","source":"import pandas  as pd\nimport numpy   as np\nimport xgboost as xgb","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-11T00:23:41.450811Z","iopub.execute_input":"2024-11-11T00:23:41.451348Z","iopub.status.idle":"2024-11-11T00:23:41.751093Z","shell.execute_reply.started":"2024-11-11T00:23:41.451304Z","shell.execute_reply":"2024-11-11T00:23:41.749685Z"}},"outputs":[],"execution_count":26},{"cell_type":"code","source":"X_train['접수연도'] = X_train['접수연도'].astype('category')\nX_train['법적동명'] = X_train['법정동명'].astype('category')\nX_train['건축년도'] = X_train['건축년도'].astype('category')\nX_train['건물용도'] = X_train['건물용도'].astype('category')\nX_train['신고구분'] = X_train['신고구분'].astype('category')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-11T00:24:56.474350Z","iopub.execute_input":"2024-11-11T00:24:56.474808Z","iopub.status.idle":"2024-11-11T00:24:56.531327Z","shell.execute_reply.started":"2024-11-11T00:24:56.474755Z","shell.execute_reply":"2024-11-11T00:24:56.529793Z"}},"outputs":[],"execution_count":28},{"cell_type":"code","source":"from sklearn.preprocessing import LabelEncoder\n\n# 필요한 열을 인코딩\nX_train['접수연도'] = X_train['접수연도'].astype('category')\nX_train['법적동명'] = X_train['법정동명'].astype('category')\nX_train['건축년도'] = X_train['건축년도'].astype('category')\nX_train['건물용도'] = X_train['건물용도'].astype('category')\nX_train['신고구분'] = X_train['신고구분'].astype('category')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-11T00:26:02.194672Z","iopub.execute_input":"2024-11-11T00:26:02.195143Z","iopub.status.idle":"2024-11-11T00:26:02.219324Z","shell.execute_reply.started":"2024-11-11T00:26:02.195100Z","shell.execute_reply":"2024-11-11T00:26:02.218147Z"}},"outputs":[],"execution_count":32},{"cell_type":"code","source":"print(X_train.dtypes)  # object 타입 열을 모두 확인하기","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-11T00:26:02.903729Z","iopub.execute_input":"2024-11-11T00:26:02.904299Z","iopub.status.idle":"2024-11-11T00:26:02.911491Z","shell.execute_reply.started":"2024-11-11T00:26:02.904237Z","shell.execute_reply":"2024-11-11T00:26:02.910124Z"}},"outputs":[{"name":"stdout","text":"접수연도       category\n자치구명         object\n법정동명         object\n계약일           int64\n건물면적(㎡)     float64\n토지면적(㎡)     float64\n층           float64\n건축년도       category\n건물용도       category\n신고구분       category\n법적동명       category\ndtype: object\n","output_type":"stream"}],"execution_count":33},{"cell_type":"code","source":"print(X_train.columns)\nprint(X_test.columns)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-11T00:31:34.140998Z","iopub.execute_input":"2024-11-11T00:31:34.142317Z","iopub.status.idle":"2024-11-11T00:31:34.148925Z","shell.execute_reply.started":"2024-11-11T00:31:34.142264Z","shell.execute_reply":"2024-11-11T00:31:34.147431Z"}},"outputs":[{"name":"stdout","text":"Index(['접수연도', '자치구명', '법정동명', '계약일', '건물면적(㎡)', '토지면적(㎡)', '층', '건축년도',\n       '건물용도', '신고구분', '법적동명'],\n      dtype='object')\nIndex(['접수연도', '자치구명', '법정동명', '계약일', '건물면적(㎡)', '토지면적(㎡)', '층', '건축년도',\n       '건물용도', '신고구분'],\n      dtype='object')\n","output_type":"stream"}],"execution_count":37},{"cell_type":"markdown","source":"# One-Hot Encoding (원-핫 인코딩): pd.get_dummies() 또는 OneHotEncoder를 사용하여 범주형 데이터를 0과 1로 이루어진 벡터로 변환합니다.","metadata":{}},{"cell_type":"code","source":"import pandas as pd\n\n\n# 범주형 열 '자치구명'을 원-핫 인코딩\nX_train = pd.get_dummies(X_train, columns=['자치구명'])\nX_test = pd.get_dummies(X_test, columns=['자치구명'])","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-11T00:33:35.103155Z","iopub.execute_input":"2024-11-11T00:33:35.103595Z","iopub.status.idle":"2024-11-11T00:33:35.151017Z","shell.execute_reply.started":"2024-11-11T00:33:35.103555Z","shell.execute_reply":"2024-11-11T00:33:35.149993Z"}},"outputs":[],"execution_count":38},{"cell_type":"code","source":"# 데이터프레임에서 범주형 열을 원-핫 인코딩\nX_train = pd.get_dummies(X_train)\nX_test = pd.get_dummies(X_test)\n\n# 인코딩 후 모든 열이 수치형인지 확인\nprint(X_train.dtypes)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-11T00:35:17.419728Z","iopub.execute_input":"2024-11-11T00:35:17.420201Z","iopub.status.idle":"2024-11-11T00:35:17.687385Z","shell.execute_reply.started":"2024-11-11T00:35:17.420161Z","shell.execute_reply":"2024-11-11T00:35:17.685981Z"}},"outputs":[{"name":"stdout","text":"계약일           int64\n건물면적(㎡)     float64\n토지면적(㎡)     float64\n층           float64\n자치구명_강남구       bool\n             ...   \n법적동명_효창동       bool\n법적동명_후암동       bool\n법적동명_휘경동       bool\n법적동명_흑석동       bool\n법적동명_흥인동       bool\nLength: 870, dtype: object\n","output_type":"stream"}],"execution_count":40},{"cell_type":"code","source":"from sklearn.ensemble import GradientBoostingRegressor\n\n# 모델 정의\nregressor = GradientBoostingRegressor()\n\n# 파라미터 그리드 설정\nparam_grid = {\"max_depth\":    [4, 5, 6],\n              \"n_estimators\": [500, 600, 700],\n              \"learning_rate\": [0.01, 0.015]}\n\n# GridSearchCV로 하이퍼파라미터 튜닝\nsearch = GridSearchCV(regressor, param_grid, cv=5).fit(X_train, y_train)\n\n# y_train을 1차원 배열로 변환\nsearch = GridSearchCV(regressor, param_grid, cv=5).fit(X_train, y_train.ravel())\n\nprint(\"The best hyperparameters are \", search.best_params_)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-11-11T00:40:35.810942Z","iopub.execute_input":"2024-11-11T00:40:35.811378Z"}},"outputs":[{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/sklearn/ensemble/_gb.py:437: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n  y = column_or_1d(y, warn=True)\n/opt/conda/lib/python3.10/site-packages/sklearn/ensemble/_gb.py:437: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n  y = column_or_1d(y, warn=True)\n/opt/conda/lib/python3.10/site-packages/sklearn/ensemble/_gb.py:437: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n  y = column_or_1d(y, warn=True)\n/opt/conda/lib/python3.10/site-packages/sklearn/ensemble/_gb.py:437: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n  y = column_or_1d(y, warn=True)\n/opt/conda/lib/python3.10/site-packages/sklearn/ensemble/_gb.py:437: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n  y = column_or_1d(y, warn=True)\n/opt/conda/lib/python3.10/site-packages/sklearn/ensemble/_gb.py:437: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n  y = column_or_1d(y, warn=True)\n/opt/conda/lib/python3.10/site-packages/sklearn/ensemble/_gb.py:437: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n  y = column_or_1d(y, warn=True)\n/opt/conda/lib/python3.10/site-packages/sklearn/ensemble/_gb.py:437: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n  y = column_or_1d(y, warn=True)\n/opt/conda/lib/python3.10/site-packages/sklearn/ensemble/_gb.py:437: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n  y = column_or_1d(y, warn=True)\n/opt/conda/lib/python3.10/site-packages/sklearn/ensemble/_gb.py:437: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n  y = column_or_1d(y, warn=True)\n/opt/conda/lib/python3.10/site-packages/sklearn/ensemble/_gb.py:437: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n  y = column_or_1d(y, warn=True)\n","output_type":"stream"}],"execution_count":null},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null}]}